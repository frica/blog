<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Blog like it's 2002 - Tech</title><link href="https://frica.github.io/blog/" rel="alternate"></link><link href="https://frica.github.io/blog/feeds/tech.atom.xml" rel="self"></link><id>https://frica.github.io/blog/</id><updated>2024-03-01T23:00:00+01:00</updated><subtitle>Tech and stuff</subtitle><entry><title>Python modern UI toolkit</title><link href="https://frica.github.io/blog/python-modern-ui-toolkit.html" rel="alternate"></link><published>2024-03-01T23:00:00+01:00</published><updated>2024-03-01T23:00:00+01:00</updated><author><name></name></author><id>tag:frica.github.io,2024-03-01:/blog/python-modern-ui-toolkit.html</id><summary type="html">&lt;p&gt;Yesterday I discovered a modern-looking UI toolkit for Python called &lt;a href="https://nicegui.io/"&gt;NiceGUI&lt;/a&gt; and I played around a bit.&lt;/p&gt;
&lt;p&gt;Installation:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install nicegui
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hello world application&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;nicegui&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ui&lt;/span&gt;
&lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello world!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To go a bit further, I decided to use the &lt;a href="https://data.paris2024.org/"&gt;2024 Olympic Games open data&lt;/a&gt; to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Yesterday I discovered a modern-looking UI toolkit for Python called &lt;a href="https://nicegui.io/"&gt;NiceGUI&lt;/a&gt; and I played around a bit.&lt;/p&gt;
&lt;p&gt;Installation:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install nicegui
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hello world application&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;nicegui&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ui&lt;/span&gt;
&lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello world!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To go a bit further, I decided to use the &lt;a href="https://data.paris2024.org/"&gt;2024 Olympic Games open data&lt;/a&gt; to load a list of all Olympic sites. First I downloaded locally the json file containing all sites for the Olympics and Paralympics Games.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;nicegui&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ui&lt;/span&gt;

&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;site&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Site&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;field&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;site&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;required&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;align&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;left&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sports&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Sport(s)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;field&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sports&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sortable&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;align&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;left&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;paris-2024-sites-de-competition.json&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;# read file&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;myfile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# parse file&lt;/span&gt;
&lt;span class="n"&gt;sites&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sites&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;category_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;venue-olympic&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;site&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nom_du_site&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
                  &lt;span class="s1"&gt;&amp;#39;sports&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sports&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]})&lt;/span&gt;

&lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Olympic sites list&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pagination&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;JO Paris 2024&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And voilà! It will show in your web browser by default.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://frica.github.io/blog/images/nicegui_list.png" width="600" title="My Sample NiceGUI application" alt="My Sample NiceGUI application"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; extra header and footer are not in the sample code.&lt;/p&gt;</content><category term="Tech"></category><category term="python"></category><category term="nicegui"></category></entry><entry><title>Playing locally with AI models</title><link href="https://frica.github.io/blog/playing-locally-with-ai-models.html" rel="alternate"></link><published>2024-02-29T22:00:00+01:00</published><updated>2024-02-29T22:00:00+01:00</updated><author><name></name></author><id>tag:frica.github.io,2024-02-29:/blog/playing-locally-with-ai-models.html</id><summary type="html">&lt;p&gt;Unless you live under a rock, you've heard about the AI buzz the last 2 years. Since &lt;a href="https://chat.openai.com/"&gt;ChatGPT&lt;/a&gt; has entered the game, it has become more concrete for regular people how powerful the generative AI models are.&lt;/p&gt;
&lt;p&gt;Every week (if not everyday) there are announcements about a new model released …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Unless you live under a rock, you've heard about the AI buzz the last 2 years. Since &lt;a href="https://chat.openai.com/"&gt;ChatGPT&lt;/a&gt; has entered the game, it has become more concrete for regular people how powerful the generative AI models are.&lt;/p&gt;
&lt;p&gt;Every week (if not everyday) there are announcements about a new model released by either Google, OpenAI or Mistral...&lt;/p&gt;
&lt;p&gt;So after reading quite a bit about it, I wanted to go over the hype and try the different models locally. I discovered &lt;a href="https://lmstudio.ai/"&gt;LM Studio&lt;/a&gt; and it blew my mind. I thought you had to do lots of complicated things to try out the models, like set up advanced integration in GCP or Azure... and in fact no.&lt;/p&gt;
&lt;p&gt;LM Studio has a neat interface where you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;download different models (Genma, Phi 2, you name it)&lt;/li&gt;
&lt;li&gt;start a web server using one of them&lt;/li&gt;
&lt;li&gt;query the model with a prompt UI&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;all this &lt;strong&gt;locally&lt;/strong&gt; on your machine!&lt;/p&gt;
&lt;p&gt;&lt;img src="https://frica.github.io/blog/images/lmstudio.png" width="600" title="Screenshot of LM Studio" alt="Screenshot of LM Studio"&gt;&lt;/p&gt;
&lt;p&gt;When it starts a local server, it load the model selected and then you can query it with curl or any REST client.&lt;/p&gt;
&lt;p&gt;I used the &lt;a href="https://marketplace.visualstudio.com/items?itemName=humao.rest-client"&gt;REST Client extension for VS code&lt;/a&gt; and it works perfectly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: if you encounter problems accessing &lt;code&gt;localhost&lt;/code&gt; from the WSL Ubuntu:&lt;/p&gt;
&lt;p&gt;Check this &lt;a href="https://learn.microsoft.com/en-us/windows/wsl/networking#accessing-windows-networking-apps-from-linux-host-ip"&gt;link&lt;/a&gt;. It comes down to running the following command to know what &lt;code&gt;localhost&lt;/code&gt; really is for the WSL:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;ip&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;route&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;show&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;grep&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;awk&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{ print $3}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Replace &lt;code&gt;localhost&lt;/code&gt; by the IP the command returned in your REST (or .http) file and you're set.&lt;/p&gt;
&lt;p&gt;Happy testing!&lt;/p&gt;</content><category term="Tech"></category><category term="AI"></category></entry><entry><title>Switching remote git repo URLs from HTTPS to SSH</title><link href="https://frica.github.io/blog/switching-remote-git-repo-urls-from-https-to-ssh.html" rel="alternate"></link><published>2024-02-29T10:00:00+01:00</published><updated>2024-02-29T10:00:00+01:00</updated><author><name></name></author><id>tag:frica.github.io,2024-02-29:/blog/switching-remote-git-repo-urls-from-https-to-ssh.html</id><summary type="html">&lt;p&gt;Let's say, like me, you always forget to initialize/clone correctly the git repo with SSH and you did by mistake:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git clone https://github.com/frica/&amp;lt;repo&amp;gt;.git &amp;lt;my folder&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then when you want to push to main you will be blocked by GitHub:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Username&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://github.com …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Let's say, like me, you always forget to initialize/clone correctly the git repo with SSH and you did by mistake:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git clone https://github.com/frica/&amp;lt;repo&amp;gt;.git &amp;lt;my folder&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then when you want to push to main you will be blocked by GitHub:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Username&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://github.com&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;***&lt;/span&gt;
&lt;span class="n"&gt;Password&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://&amp;lt;user&amp;gt;@github.com&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;***&lt;/span&gt;
&lt;span class="nl"&gt;remote&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Support&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;authentication&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;was&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;removed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;August&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;2021.&lt;/span&gt;
&lt;span class="nl"&gt;remote&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Please&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;see&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;started&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;getting&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;started&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;about&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;repositories#cloning&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;currently&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;recommended&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;modes&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;authentication&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nl"&gt;fatal&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Authentication&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;failed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://github.com/&amp;lt;user&amp;gt;/&amp;lt;repo&amp;gt;.git/&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In fact the fix is extremely simple, don't bother with the link they give you.&lt;/p&gt;
&lt;p&gt;Just type:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;origin&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="nv"&gt;@github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;com&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;user&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;/&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And BAM, your local repo is linked to the remote one with SSH as it should be 😊&lt;/p&gt;</content><category term="Tech"></category><category term="git"></category></entry><entry><title>Tuning my Pelican usage and setup</title><link href="https://frica.github.io/blog/tuning-my-pelican-usage-and-setup.html" rel="alternate"></link><published>2024-02-25T10:19:00+01:00</published><updated>2024-02-25T10:19:00+01:00</updated><author><name></name></author><id>tag:frica.github.io,2024-02-25:/blog/tuning-my-pelican-usage-and-setup.html</id><summary type="html">&lt;p&gt;Here are some things I learned after a few days working with Pelican.&lt;/p&gt;
&lt;h1&gt;ghp-import&lt;/h1&gt;
&lt;p&gt;The useful &lt;a href="https://pypi.org/project/ghp-import/"&gt;ghp-import&lt;/a&gt; tool is a non-standard git command mentioned in every article about Pelican setup. A quick look at the &lt;code&gt;--help&lt;/code&gt; command reveals interesting options.&lt;/p&gt;
&lt;p&gt;I now use:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;op&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Upload content …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Here are some things I learned after a few days working with Pelican.&lt;/p&gt;
&lt;h1&gt;ghp-import&lt;/h1&gt;
&lt;p&gt;The useful &lt;a href="https://pypi.org/project/ghp-import/"&gt;ghp-import&lt;/a&gt; tool is a non-standard git command mentioned in every article about Pelican setup. A quick look at the &lt;code&gt;--help&lt;/code&gt; command reveals interesting options.&lt;/p&gt;
&lt;p&gt;I now use:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;op&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Upload content&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;-p&lt;/code&gt; option pushes to origin/master, which spares you an extra command.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;-o&lt;/code&gt; overwrites the history of the gh-pages.&lt;/p&gt;
&lt;p&gt;From the help:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The -o option will discard any previous history and ensure that only a single commit is always pushed to the gh-pages branch. This is useful to avoid bloating the repository size and is &lt;strong&gt;highly recommended&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;Pelican plugins&lt;/h1&gt;
&lt;p&gt;I discovered the amazing world of Pelican plugins. While I don't need most of them at the moment, I still configured my blog to use one of them, liquid_tags for a easier media integration.&lt;/p&gt;
&lt;p&gt;You can configure the plugins in your &lt;code&gt;pelicanconf.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;PLUGIN_PATHS = [&amp;#39;pelican-plugins&amp;#39;]
PLUGINS = [&amp;#39;liquid_tags&amp;#39;]
LIQUID_TAGS = [&amp;quot;img&amp;quot;, &amp;quot;literal&amp;quot;, &amp;quot;video&amp;quot;, &amp;quot;youtube&amp;quot;,
           &amp;quot;vimeo&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Example:&lt;/p&gt;
&lt;p&gt;&lt;span class="videobox"&gt;
                &lt;iframe
                    src="//player.vimeo.com/video/364868276?title=0&amp;amp;byline=0&amp;amp;portrait=0"
                    width="640" height="390" frameborder="0"
                    webkitAllowFullScreen mozallowfullscreen allowFullScreen&gt;
                &lt;/iframe&gt;
            &lt;/span&gt;&lt;/p&gt;
&lt;h1&gt;Date format&lt;/h1&gt;
&lt;p&gt;I always disliked the US time format. But as my blog is configured in English, I override it to display it to my taste. In my &lt;code&gt;pelicanconf.py&lt;/code&gt; I added:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gh"&gt;#&lt;/span&gt; European date format
DEFAULT_DATE_FORMAT = &amp;#39;%d-%m-%Y&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;Syntax highlighting&lt;/h1&gt;
&lt;p&gt;Since I have the ambition to post articles with code, I wanted to have syntax highlighting. Good news, Pelican uses the extension codehilite (that uses &lt;a href="https://pygments.org"&gt;Pygments&lt;/a&gt;). It works out of the box without configuration.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.getpelican.com/en/latest/faq.html#i-m-creating-my-own-theme-how-do-i-use-pygments-for-syntax-highlighting"&gt;This link from the Pelican FAQ&lt;/a&gt; explains everything you need to know, &lt;strong&gt;if you create your new theme&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;I wanted to reuse the &lt;code&gt;notmyidea&lt;/code&gt; and only extend the css to use my own pygment.css to use the &lt;code&gt;dracula&lt;/code&gt; colorset, but I didn't succeed...&lt;/p&gt;
&lt;p&gt;Anyway it looks like this by default with the default theme:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# This program adds two numbers&lt;/span&gt;
&lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.5&lt;/span&gt;
&lt;span class="n"&gt;num2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;6.3&lt;/span&gt;

&lt;span class="c1"&gt;# Add two numbers&lt;/span&gt;
&lt;span class="nb"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;

&lt;span class="c1"&gt;# Display the sum&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;The sum of &lt;/span&gt;&lt;span class="si"&gt;{0}&lt;/span&gt;&lt;span class="s1"&gt; and &lt;/span&gt;&lt;span class="si"&gt;{1}&lt;/span&gt;&lt;span class="s1"&gt; is &lt;/span&gt;&lt;span class="si"&gt;{2}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category><category term="pelican"></category><category term="github"></category></entry><entry><title>Setting up a blog with Pelican</title><link href="https://frica.github.io/blog/setting-up-a-blog-with-pelican.html" rel="alternate"></link><published>2024-02-23T10:47:00+01:00</published><updated>2024-02-23T10:47:00+01:00</updated><author><name></name></author><id>tag:frica.github.io,2024-02-23:/blog/setting-up-a-blog-with-pelican.html</id><summary type="html">&lt;p&gt;I will explain here the steps to build your static website with &lt;a href="https://getpelican.com/"&gt;Pelican&lt;/a&gt; and deploy it on GitHub Pages.&lt;/p&gt;
&lt;p&gt;But first, why use Pelican and not Wordpress or Dotclear, like back when I  started my first blog?&lt;/p&gt;
&lt;p&gt;I was looking for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;simplicity: Pelican uses markdown syntax in plain text files …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I will explain here the steps to build your static website with &lt;a href="https://getpelican.com/"&gt;Pelican&lt;/a&gt; and deploy it on GitHub Pages.&lt;/p&gt;
&lt;p&gt;But first, why use Pelican and not Wordpress or Dotclear, like back when I  started my first blog?&lt;/p&gt;
&lt;p&gt;I was looking for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;simplicity: Pelican uses markdown syntax in plain text files, site structure generated is simple and stylish enough&lt;/li&gt;
&lt;li&gt;ease of deployment: generating html from the markdown files is done by Pelican&lt;/li&gt;
&lt;li&gt;free solution: it can be hosted on GitHub pages, so it's perfect&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;I used Ubuntu WSL on Windows because I had it setup from a Docker course that I followed recently and I quite liked it.&lt;/p&gt;
&lt;p&gt;So in the Terminal, type&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install python3
sudo apt install pelican 
sudo apt install pip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Create a project&lt;/h2&gt;
&lt;p&gt;Go where you want to create your blog:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir blog
cd blog
pelican-quickstart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Leave the default values in the quickstart.&lt;/p&gt;
&lt;p&gt;Create a file and write a dummy post:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Title: My First Review
Date: 2024-02-23 10:20
Category: Test

This is a test.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Save it under &lt;code&gt;blog/content&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then run:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pelican content
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Your site has now been generated inside the &lt;code&gt;output/&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;If you want to look at your generated site, run:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pelican -l
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Hosting&lt;/h2&gt;
&lt;p&gt;In case you have a GitHub account, you can use the GitHub pages to host the generated website.&lt;/p&gt;
&lt;p&gt;Make sure you are in your blog directory and initialize the git repo:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Commit all your files locally (except the files not needed for the git repo):&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;echo &amp;quot;output/&amp;quot; &amp;gt;&amp;gt; .gitignore
echo &amp;quot;__pycache__/&amp;quot; &amp;gt;&amp;gt; .gitignore
git add -all
git commit -m &amp;quot;Initialize blog&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;: the -A adds all unstaged files to the repo.&lt;/p&gt;
&lt;p&gt;Setup your GitHub pages locally:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;
&lt;span class="nn"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Initial upload&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; ghp-import will itself create your gh-pages branch and a new commit in it.&lt;/p&gt;
&lt;p&gt;Go to you GitHub account and create an empty git repository with these properties:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Same&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;
&lt;span class="n"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;My&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;
&lt;span class="n"&gt;Gitignore&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;None&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Licence&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;None&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Initialize&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;README&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;No&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Set git remote&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;origin&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="nv"&gt;@github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;com&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;/&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Push your gh-pages to GitHub&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git checkout gh-pages
git push origin gh-pages
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;
Normally, gh-pages should be set as your default branches now on GitHub.&lt;/p&gt;
&lt;p&gt;Wait a minute or two and check your blog on:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;https://username.github.io/blog/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; GitHub pages have of course limitations in site size and bandwith but that's good enough for me to write my articles and include some pictures.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Optional:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you want to push your content and not only the generated site on GitHub, run:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git add -A
git commit -m &amp;quot;Initialize blog content&amp;quot;
git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr&gt;
&lt;p&gt;That's all folks!&lt;/p&gt;</content><category term="Tech"></category><category term="pelican"></category><category term="github"></category></entry><entry><title>My learning path</title><link href="https://frica.github.io/blog/my-learning-path.html" rel="alternate"></link><published>2024-02-22T15:00:00+01:00</published><updated>2024-02-22T15:00:00+01:00</updated><author><name></name></author><id>tag:frica.github.io,2024-02-22:/blog/my-learning-path.html</id><content type="html">&lt;p&gt;I compiled a list of the online trainings, followed or to follow, free or not. Impressive what the Internet has to offer!&lt;/p&gt;
&lt;p&gt;It's available &lt;a href="https://github.com/frica/learning-path/"&gt;here&lt;/a&gt;.&lt;/p&gt;</content><category term="Tech"></category><category term="learning"></category></entry><entry><title>The end of Ingenuity</title><link href="https://frica.github.io/blog/the-end-of-ingenuity.html" rel="alternate"></link><published>2024-01-24T10:00:00+01:00</published><updated>2024-01-24T10:00:00+01:00</updated><author><name></name></author><id>tag:frica.github.io,2024-01-24:/blog/the-end-of-ingenuity.html</id><summary type="html">&lt;p&gt;NASA's Ingenuity Helicopter won't fly on Mars anymore... The helicopter itself captured this color image showing the shadow of a rotor blade damaged during a rough landing.&lt;/p&gt;
&lt;p&gt;So one of the main exploration devices of the mission is broken, &lt;strong&gt;225 million km away from Earth&lt;/strong&gt;. There is of course no …&lt;/p&gt;</summary><content type="html">&lt;p&gt;NASA's Ingenuity Helicopter won't fly on Mars anymore... The helicopter itself captured this color image showing the shadow of a rotor blade damaged during a rough landing.&lt;/p&gt;
&lt;p&gt;So one of the main exploration devices of the mission is broken, &lt;strong&gt;225 million km away from Earth&lt;/strong&gt;. There is of course no way to repair it. Is that an engineering failure, in multi-billion dollar scientific expedition?&lt;/p&gt;
&lt;p&gt;Not at all.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The device was expected to be a technical demonstration and do 5 flights. It did &lt;strong&gt;72&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;➡️ NASA over-engineered the helicopter so it ended up lasting way longer than the mission specs. Carrying on the tradition from Voyager and other probes, NASA JPL engineers did not go for the bare minimum.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The incident was disclosed openly on Jan 25th, after the damage was confirmed on Jan 19 after a test flight on the 18th.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;➡️ NASA is not hiding the issue. NASA is proud of the work achieved and is busy working on the root cause analysis, sharing as much as they know. Even the failure itself is actually a great science result.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This actually proved the helicopter to be a standard method for exploring Mars.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;➡️ May be the case only on Mars (and Titan) but that's already a great confirmation of a badass concept. The science return we're going to get from it will be truly amazing.&lt;/p&gt;
&lt;p&gt;NASA's engineering teams truly represent what we should love about technology ❤️&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Sources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.nasa.gov/news-release/after-three-years-on-mars-nasas-ingenuity-helicopter-mission-ends/"&gt;NASA announcement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=hW5akI5Rnyg"&gt;Administrator Bill Nelson announces the end of Ingenuity Mars Helicopter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tech"></category><category term="space"></category><category term="ingenuity"></category></entry></feed>